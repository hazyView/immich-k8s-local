name: Build and Deploy Immich Dev
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  GHCR_REGISTRY: ghcr.io
  GH_USERNAME: ${{ github.repository_owner }}
jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write
    outputs:
      image_tag: ${{ steps.image_tag.outputs.tag }}
    steps:
      - name: Set IMMICH_VERSION
        id: immich_version
        run: |
          git ls-remote --tags --sort="-v:refname" https://github.com/immich-app/immich.git
          LATEST_TAG=$(git ls-remote --tags --sort="-v:refname" https://github.com/immich-app/immich.git | head -n 1 | awk -F/ '{print $3}')
          if [ -z "$LATEST_TAG"; then
            LATEST_TAG="v1.134.0"
          fi
          echo "Latest Immich tag is: $LATEST_TAG"
          echo "IMMICH_VERSION=$LATEST_TAG" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Compute Lowercase Username
        id: compute_username
        run: |
          LOWERCASE_USERNAME=$(echo "${{ env.GH_USERNAME }}" | tr '[:upper:]' '[:lower:]')
          echo "lowercase_username=$LOWERCASE_USERNAME" >> $GITHUB_ENV    
      - name: Generate Image Tag
        id: image_tag
        run: |
          # Use Git SHA for unique tagging
          TAG=$(git rev-parse --short HEAD)
          echo "Generated tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
      - name: Build and push immich-server
        uses: docker/build-push-action@v5
        with:
          context: ./immich/dockerfiles/server
          file: ./immich/dockerfiles/server/Dockerfile
          push: true
          tags: ${{ env.GHCR_REGISTRY }}/${{ env.lowercase_username }}/immich-server:${{
            steps.image_tag.outputs.tag }}, ${{ env.GHCR_REGISTRY }}/${{
            env.lowercase_username }}/immich-server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            IMMICH_VERSION=${{ env.IMMICH_VERSION }}
      - name: Build and push immich-microservices
        uses: docker/build-push-action@v5
        with:
          context: ./immich/dockerfiles/microservices
          file: ./immich/dockerfiles/microservices/Dockerfile
          push: true
          tags: ${{ env.GHCR_REGISTRY }}/${{ env.lowercase_username }}/immich-server:${{
            steps.image_tag.outputs.tag }}, ${{ env.GHCR_REGISTRY }}/${{
            env.lowercase_username }}/immich-microservices:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build and push immich-web
        uses: docker/build-push-action@v5
        with:
          context: ./immich/dockerfiles/web
          file: ./immich/dockerfiles/web/Dockerfile
          push: true
           ${{ env.GHCR_REGISTRY }}/${{ env.lowercase_username }}/immich-server:${{
            steps.image_tag.outputs.tag }}, ${{ env.GHCR_REGISTRY }}/${{
            env.lowercase_username }}/immich-web:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Update Kustomize Image Tags
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: >
          echo "Updating Kustomize image tags to ${{ steps.image_tag.outputs.tag }}"

          cd immich/overlays/local-dev

          kustomize edit set image ${{ env.GHCR_REGISTRY }}/${{ env.GH_USERNAME }}/immich-server=${{ env.GHCR_REGISTRY }}/${{ env.GH_USERNAME }}/immich-server:${{ steps.image_tag.outputs.tag }}

          kustomize edit set image ${{ env.GHCR_REGISTRY }}/${{ env.GH_USERNAME }}/immich-microservices=${{ env.GHCR_REGISTRY }}/${{ env.GH_USERNAME }}/immich-microservices:${{ steps.image_tag.outputs.tag }}

          kustomize edit set image ${{ env.GHCR_REGISTRY }}/${{ env.GH_USERNAME }}/immich-web=${{ env.GHCR_REGISTRY }}/${{ env.GH_USERNAME }}/immich-web:${{ steps.image_tag.outputs.tag }}

          # kustomize edit set image ${{ env.GHCR_REGISTRY }}/${{ env.GH_USERNAME }}/immich-ml=${{ env.GHCR_REGISTRY }}/${{ env.GH_USERNAME }}/immich-ml:${{ steps.image_tag.outputs.tag }} # If using ML

          cd ../../.. # Back to root

          cat immich/overlays/local-dev/kustomization.yaml # Display changes
      - name: Commit Kustomize changes
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: Update image tags to ${{ steps.image_tag.outputs.tag }}"
          file_pattern: immich/overlays/local-dev/kustomization.yaml
  lint-k8s-manifests:
    runs-on: ubuntu-latest
    needs: build-and-push-images
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v2
      - name: Setup kubeconform
        uses: yokawasa/action-setup-kube-tools@v0.9.0
        with:
          kubeconform: 0.6.4
      - name: Validate Root Kustomization (PostgreSQL + Immich)
        run: >
          # Ensure root kustomization.yaml exists before running this

          # kustomize build . | kubeconform -strict -summary -kubernetes-version 1.28.0

          echo "Linting PostgreSQL manifests..."

          kustomize build postgresql/ | kubeconform -strict -summary -kubernetes-version 1.28.0

          echo "Linting Immich manifests (local-dev overlay)..."

          kustomize build immich/overlays/local-dev/ | kubeconform -strict -summary -kubernetes-version 1.28.0

